== 2.0.0/ 2017-09-23
 * Parsing behaviour has changed, parsing errors are not accepted and the run fails immediately
== 2.0.0.pre15 /2017-02-08
 * Update gem dependencies
== 2.0.0.pre14 /2017-01-11
 * Fixed 2.3.1 compat issue (mrkita)
== 2.0.0.pre13 /2016-09-13
 * Introduced suite_teardown and aliased check to suite_setup
 * Added strict_mode to example XML parser
== 2.0.0.pre12 /2016-04-14
 * Fixed crash when test name was nil in all reporters
== 2.0.0.pre11 /2016-04-14
 * Fixed crash in detecting failures in the junit reporter
== 2.0.0.pre10 /2016-03-21
 * Typed collection for states in block reporters
== 2.0.0.pre9 /2016-03-14
 * Bugfix: JUnit reporter works again
== 2.0.0.pre8 /2016-03-09
 * Bugfix: Fail a run if the check,setup or teardown specs fail to parse
== 2.0.0.pre7 /2016-02-29
 * Bugfix: --check was not working
== 2.0.0.pre6 /2016-02-15
 * Switch the reporter interface to using types instead of hashes
 * Fix Ruby deprecation warnings
 * Reduced message output
 * Console reporter now has a verbosity setting
 * Configuration setting for switching runners added
 * NoOp Runner added
== 2.0.0.pre5 /2015-09-14
 * Add JUnit format reporter
 * The NUnit format is v3, which means it won't work for most CI plugins
== 2.0.0.pre2 /2015-09-10
 * Completely rewritten execution engine
   * dropped Ruby 1.8.x, 1.9.x support, added 2.x
 * Rewritten configuration engine and new format for configuration files
 * Step by step status updates can now be sent to streaming reporters
 * Core separated from standard implementations
 * No database dependencies, no AR model.
 * No more disk IO in unit tests
 * pre3:
    * errors now affect the rutema exit code (before it was only test failures)
    * single test execution works with expected relative paths
 * pre4:
    * NUnit-style XML reporter
    * JSON reporter

== 1.3.0 /2012-11-28
* remove most of the gem dependencies by not requiring parsers and reporters in the core
* update gem dependencies
* switched license to MIT
* officially abandon 1.8.7 support

== 1.2.4 /2011-11-29
* fixed a regression in parsing the configuration
* updated gem dependencies
* added Bundler configuration for development purposes
* activerecord now loaded on demand to improve startup times
* 1.9 compatibility!
* the mixed sample/tests are now clearly split between examples and test data
* Documentation overhaul started. 4 years of cruft to get rid of
== 1.2.3 /2011-05-03
* parser interface expanded for configuration validation
* parser interface expanded to allow separate parsing of setup and teardown scripts
== 1.2.2 /2011-04-05
* Actually fixed all the places where path expansion takes place.
== 1.2.1 /2011-04-04
* The configuration code no longer assumes that you are passing files. configuration.tests= now assumes you're passing an array of strings and it is the responsibility of the parser to make heads or tails from that. The configuration is clever enough to detect paths relative to the configuration file and expand them.
* some minor cosmetic changes in the documentation
== 1.2.0 /2011-04-01
* refactored library structure
* More unit tests. We're now over the magical 80% coverage point
* Updated gem dependencies for activerecord to the newest version
* Deprecated rutemax. The command now is simply rutema (avoids observed confusion). Will remove in 1.3.0
== 1.1.3 /2010-12-23
* fixed dependency handling of Rutema::RakeTask within the block.
== 1.1.2 /2010-12-22
* Rutema::RakeTask accepts dependencies
== 1.1.1 /2010-12-22
* Bugfix: RakeTask constructor parameter config renamed to config_file to match the accessor methods
== 1.1.0 /2010-12-20
* Added Rutema::RakeTask class to allow integration of the test runner with rake
* Email reporting now suppresses _setup and _teardown entries unless it's configured as verbose. To do this add a :verbose=>true entry in the reporter configuration
* Fixed a bug, where on a setup spec failure the state of the actual spec was nil
* added YAML dump reporter
* Fixed a bug in the initialization of StepRunner that prevented use of --step
== 1.0.9 / 2010-03-22
* Fixed (hopefully) a nagging bug in activerecord reporter where it would crash if a step had status nil.
* Fixed the same behaviour in the text reporter
* Improved the logging of steps to avoid a debug logging exception that messed logs up
* Thinned out the debug logs
== 1.0.8 / 2009-11-13
* ActiveRecordReporter now accepts all activerecord adapter parameters - you can now connect to DBs other than sqlite3
* Reporter delegation now more robust (rutemax will exit gracefully and log if one reporter bombs)
* The old db connection code was removed. Explicit dependencies to adapters are also absent - you have to now have the appropriate gems for the ActiveRecordReporter to work properly
== 1.0.7 / 2009-09-11
* Steps now include the commandline (if there) in their name - makes the logs more readable
* Added a check for nil states to ensure reporters always get valid data
* activerecord dependency is now 2.3.4
== 1.0.6 / 2009-09-04
* The run context is now passed to the runner and subsequently to the TestStep#run method
	This way you can pass informaton to the command being run (context contains information on the start time of the run, the spec filename as well as any information added in the configuration)
* Minor bugfix in the activerecord reporter to avoid crashes due to nil runner states
* The runner adds the current scenario name to the context passed
== 1.0.5 / 2009-07-16
* Updated gem dependencies to use activerecord 2.3.2
* A failure of the check test now passes all test stati (as not_executed). This will not skew statistics that show the trends on test numbers
* Setup and teardown are no longer executed for check tests
* fixed bug in element_prompt where a negative answer would not set an error
* TextReporter now shows the failed tests first, followed by tests with warnings, not executed tests and finally the successes. This gives a better overview of the important bits
* removed require "rubygems" from library code
== 1.0.4 / 2008-11-7
* Added functionality that allows ignoring the result of a step. The step is considered always successful
== 1.0.3 / 2008-10-28
* The name of the configuration file is added in the context information - can be used to group results together in cases where there are multiple configurations
* Context is now stored as a Hash
* EmailReporter now displays a footer as defined in it's configuration
== 1.0.2 / 2008-10-23
* Bugfix in ActiveRecordReporter: \000 sequences produce exceptions when inserting.
* Output and error from commands is now more strictly sanitized.
== 1.0.1 / 2008-10-13
* rutema_upgrader - Bug: update not performed - fixed
== 1.0.0 / 2008-10-06
* DB schema change: title and description added to scenario table
* footer parameter for the email reporter
* Specification titles included in the text reports
* When parsing multiple specifications a duplicate name will now generate a parser error
* rutema_updater upgrades existing databases, check http://patir.rubyforge.org/rutema/update_090_to_100.html
* rutemah scrapped
* rutemax logs it's version always
* activerecord 2.1.1 is now in use

== 0.9.3 / 2008-09-10
* Sorted result summaries in the text and the email reporter
* ActiveRecordReporter registration logging
== 0.9.2 / 2008-09-10
* Fixed major blunder with test reporting
* Added text reporter for consistent text summaries
* More tests
* Fixed check test behaviour (was not running even when specified in the configuration)
* Fixed bungled emailing when using multiple addresses in the config
== 0.9.1 / 2008-09-09
* Modularisation of element parsing methods introduced.
* MinimalXMLParser refactored as example.
* Extra element parser modules available in the rutema_elements gem
* Cleaned up EmailReporter. Unit tests with Mocha, text report has a better layout
== 0.9.0 / 2008-09-08
* Ability to nest scenarios added to the base parser
* Documentation at http://patir.rubyforge.org/rutema/tool_configuration.html

== 0.8.0 / 2008-07-03
* Split rutemaweb into own gem
* Refactored reporters
* Re-enabled the --step commandline facility of rutemax allowing step-by-step execution and fixed the StepRunner implementation

== 0.7.1 / 2008-06-12
* Added the ruport_formatter.rb file to the manifest (and consequently to the gem)
* Locked down the active record and ramaze versions to avoid the String#start_with? alias bug from active support 2.1.0 and the Ramaze.start! change
== 0.7.0 / 2008-05-16
* Support for tools, paths and context information in the configuration solidified (http://patir.rubyforge.org/rutema/tool_configuration.html for more)
* Changes in the configuration for Historian and ActiveRecordReporter. Check the distro_test samples
* database connection code consolidated in db.rb
* Added support for jdbc/h2 to work with jRuby
* AR-reporter configuration expanded to support different adapters. Consistent with the Historian db configuration
* rutema unit tests now run under jRuby
* rutemah runs under jRuby

== 0.6.5 / 2008-04-15
* Updated rutemaweb controller to work with ramaze 0.3.9.1
== 0.6.4 / 2008-03-30
* Bugfix: duration SQL type adjusted in the model to return proper values.
* Bugfix: name=step_type for TestStep so that name is assigned a value in the model step
* Locked the Ramaze version to 0.3.5 until we find out why the new version breaks us
== 0.6.3 / 2008-03-26
* Bugfix: specifying a .spec filename on the commandline did not work - Path expanded before changing directory.
* Bugfix: running an attended .spec on it's own was not possible - attended mode is now set for single runs.
* Cleaned up the Runner's log output
== 0.6.2 / 2008-03-12
* Parsers derived from Rutema::SpecificationParser now receive the system configuration so that conventions like tools, paths and context can be used in element_ methods (this functionality fell through the cracks with the change in parser implementation)
* rutemaweb now has proper commandline help and connects properly to the database
== 0.6.1 / 2008-02-28
* ExtensibleXMLParser made more tolerant (no exceptions when an element cannot be handled)
* Bug: Typo in the class name used in the exceptions fixed
* Bugfix: ActiveRecord connection throws an exception that prevented Historian from establishing a new one. Fixed
* More unit tests
== 0.6.0 / 2008-02-27
* Added Rutema::ExtensibleXMLParser - this parser simplifies parser creation immensely. Check the documentation for details
* "Howto create a parser v0.5.0" officially the fastest deprecation of a document ever. http://patir.rubyforge.org/rutema/parser.html is the new black.
* Corrected some english spelling mistakes (hey, we're not native speakers)
* Fixed an issue with AR cached connections that interfered with unit tests

== 0.5.0 / 2008-02-26
* activerecord reporter is now loaded by default (no need to require it in the configuration file)
* bugfix: step names correctly written in the database
* The web frontend now uses Ramaze
* using patir-0.5.3 because of the chdir bugfixes
* rutema can now test itself! rutemax and rutemah return meaningful exit codes. So there, we do eat our own dogfood
* lots more documentation on usage and how to build a parser

== 0.4.3 / 2008-02-25
* fixed bug in rutemax when the activerecord reporter is used, where the database was not created relative to the configuration entry
* fixed bug in rutemah where the report was not printed (doh!)
* added active record reporter configuration and rutemah configuration to distro test
== 0.4.2 / 2007-12-05
* rutemah code cleaned up
* Bugfix: MinimalXMLParser now handles relative paths in command elements correctly
* distro_test added to the gem
* Distro test documented, documentation pages updated
== 0.4.1 / 2007-12-04
* Documented MinimalXMLParser
* More debug logs
* Fixed bug in attribute checking for command steps in the minimal parser
* Fixed bug in specification parsing in the Coordinator (no specs were returned)
* Fixed bug in the implementation of <prompt> in the minimal parser (attended was not set)
* Fixed bug in evaluation of attended status for steps
* Fixed bug where runner would complain that attened scenarios cannot be run in unattended mode when choosing to run only attended tests
* Added Version module to better handle versioning
== 0.4 / 2007-07-05
* rutemaweb, a web interface for the db contents added
	* uses WEBRick, Camping and Ruport
	* offers views on all runs in the System, detailed scenario views and scenario-over-time views
* Runner now rescues all failures in scenarios
* Bugfix in setting status of attended scenario in unattended mode
* Better ruport usage in the historian
* rutemah added to the gem and manifest
* rutemax help message complete with commands
* split the AR reporter and the model
* expanded the unit tests

== 0.3 / 2007-05-30
* Reporter implementations moved to own file
* Reporter interface changed (Runner stati now passed directly as a name indexed Hash, specifications passed as well)
* ActiveRecordReporter with SQLite DB added
* rutemah (the Historian) added in tools. The Historian reads from ActiveRecordReporter databases
== 0.2 / 2007-05-21
* bin/ files included in gem
* rutemax: missing configuration file is now checked before passed to the system
== 0.1 / 2007-05-21
* A running system!
	* Basic XML parser with echo, command and prompt
	* email reporting
	* rutemax application
